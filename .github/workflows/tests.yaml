name: Run Flutter and Android Tests

on:
  push:
    branches:
      - '**'
  pull_request:

jobs:
  flutter-tests:
    name: Run Flutter Tests
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2' # Explicit Flutter version

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: flutter pub get

      # Step 4: Run Flutter tests
      - name: Run Flutter Tests
        run: flutter test

  android-native-tests:
     name: Run Android Native Tests
     runs-on: ubuntu-latest

     steps:
       # Step 1: Checkout the repository
       - name: Checkout Code
         uses: actions/checkout@v3

       # Step 2: Set up JDK
       - name: Set up JDK
         uses: actions/setup-java@v3
         with:
           distribution: 'zulu'
           java-version: '11'

       # Step 3: Cache Gradle dependencies
       - name: Cache Gradle dependencies
         uses: actions/cache@v3
         with:
           path: ~/.gradle/caches
           key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
           restore-keys: |
             ${{ runner.os }}-gradle-

       # Step 4: Set Flutter Root for Linux
       - name: Set FLUTTER_ROOT
         run: echo "FLUTTER_ROOT=/opt/flutter" >> $GITHUB_ENV

       # Step 5: Grant execute permissions for Gradle Wrapper
       - name: Grant execute permissions for Gradle Wrapper
         run: chmod +x ./android/gradlew

       # Step 6: Build and run Android native tests
       - name: Run Android Native Tests
         working-directory: android
         run: ./gradlew testDebugUnitTest

       # Step 7: Generate Android Lint Report (Optional)
       - name: Run Android Lint
         working-directory: android
         run: ./gradlew lintDebug
